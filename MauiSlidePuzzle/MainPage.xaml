<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MauiSlidePuzzle.MainPage"
             xmlns:custom="clr-namespace:MauiSlidePuzzle.CustomViews"
             BackgroundColor="{DynamicResource AppBackgroundColor}">

    <ContentPage.Resources>
        <Color x:Key="AppBackgroundColor">#C1B3FF</Color>
        <Style TargetType="ImageButton">
            <Setter Property="BackgroundColor" Value="Transparent"/>
        </Style>
    </ContentPage.Resources>

    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="AppStates">
            <VisualState Name="Initialized">
                <VisualState.Setters>
                    <Setter TargetName="StartButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ResetButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ReloadStageButton" Property="IsEnabled" Value="False"/>
                    <!-- <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="False"/> -->
                    <!-- <Setter TargetName="CompletedMessage" Property="IsVisible" Value="False"/> -->
                </VisualState.Setters>
            </VisualState>
            <VisualState Name="OnGamePreparing">
                <VisualState.Setters>
                    <Setter TargetName="StartButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ResetButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ReloadStageButton" Property="IsEnabled" Value="False"/>
                    <!-- <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="True"/>
                    <Setter TargetName="CompletedMessage" Property="IsVisible" Value="False"/> -->
                </VisualState.Setters>
            </VisualState>
            <VisualState Name="OnGameReady">
                <VisualState.Setters>
                    <Setter TargetName="StartButton" Property="IsVisible" Value="True"/>
                    <Setter TargetName="ResetButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ReloadStageButton" Property="IsEnabled" Value="False"/>
                    <!-- <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="True"/>
                    <Setter TargetName="CompletedMessage" Property="IsVisible" Value="False"/> -->
                </VisualState.Setters>
            </VisualState>
            <VisualState Name="OnGamePlay">
                <VisualState.Setters>
                    <Setter TargetName="StartButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ResetButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ReloadStageButton" Property="IsEnabled" Value="True"/>
                    <!-- <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="False"/>
                    <Setter TargetName="CompletedMessage" Property="IsVisible" Value="False"/> -->
                </VisualState.Setters>
            </VisualState>
            <VisualState Name="OnGameReset">
                <VisualState.Setters>
                    <Setter TargetName="StartButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ResetButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ReloadStageButton" Property="IsEnabled" Value="False"/>
                    <!-- <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="False"/>
                    <Setter TargetName="CompletedMessage" Property="IsVisible" Value="False"/> -->
                </VisualState.Setters>
            </VisualState>
            <VisualState Name="OnGameCompleted">
                <VisualState.Setters>
                    <Setter TargetName="StartButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ResetButton" Property="IsVisible" Value="False"/>
                    <Setter TargetName="ReloadStageButton" Property="IsEnabled" Value="False"/>
                    <!-- <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="True"/>
                    <Setter TargetName="CompletedMessage" Property="IsVisible" Value="True"/> -->
                </VisualState.Setters>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>


    <Shell.TitleView>
        <Grid x:Name="PuzzleTitleView" Margin="20, 0, 20, 0"
              BindingContext="{Binding CurrentStageInfo}">

            <Label Text="{Binding StageName}"
                   FontSize="24" TextColor="White"
                   HorizontalOptions="Start" VerticalOptions="Center"/>


            <HorizontalStackLayout
                HorizontalOptions="End" VerticalOptions="Center">

                <HorizontalStackLayout.Resources>
                    <x:Double x:Key="IconSize">40</x:Double>
                    <Style TargetType="ImageButton">
                        <Setter Property="HeightRequest" Value="{StaticResource IconSize}"/>
                        <Setter Property="WidthRequest" Value="{StaticResource IconSize}"/>
                        <Setter Property="BackgroundColor" Value="Transparent"/>
                    </Style>
                </HorizontalStackLayout.Resources>

                <ImageButton x:Name="PrevStageButton" Clicked="PrevStageClicked">
                    <ImageButton.Source>
                        <FontImageSource Glyph="&#xf107;" FontFamily="Ionicons"/>
                    </ImageButton.Source>
                </ImageButton>

                <ImageButton x:Name="ReloadStageButton" Clicked="ReloadStageClicked">
                    <ImageButton.Source>
                        <FontImageSource Glyph="&#xf21c;" FontFamily="Ionicons"/>
                    </ImageButton.Source>
                </ImageButton>

                <ImageButton x:Name="NextStageButton" Clicked="NextStageClicked">
                    <ImageButton.Source>
                        <FontImageSource Glyph="&#xf10a;" FontFamily="Ionicons"/>
                    </ImageButton.Source>
                </ImageButton>

            </HorizontalStackLayout>

        </Grid>
    </Shell.TitleView>

    <VerticalStackLayout VerticalOptions="End" HorizontalOptions="Center"
                         BindingContext="{Binding CurrentStageInfo}"
                         Spacing="20">

        <Grid HeightRequest="80">
            <Image x:Name="CompletedMessage" Source="completed.png">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="AppStates">
                        <VisualState Name="Default">
                            <VisualState.Setters>
                                <Setter TargetName="CompletedMessage" Property="IsVisible" Value="False"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="OnGameCompleted">
                            <VisualState.Setters>
                                <Setter TargetName="CompletedMessage" Property="IsVisible" Value="True"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Image>
        </Grid>

        <Grid>

            <Grid.Resources>
                <Style x:Key="PuzzleDecorationStyle" TargetType="View">
                    <Setter Property="WidthRequest" Value="{Binding Source={x:Reference PuzzleWidth}}"/>
                    <Setter Property="HeightRequest" Value="{Binding Source={x:Reference PuzzleHeight}}"/>
                </Style>
            </Grid.Resources>

            <custom:SlidePuzzleView x:Name="MyPuzzleView" IsVisible="True">
                <!-- Arguments of non-default constructor -->
                <x:Arguments>
                    <!-- 1st arg: width -->
                    <x:Double x:Name="PuzzleWidth">300</x:Double>
                    <!-- 2nd arg: height -->
                    <x:Double x:Name="PuzzleHeight">300</x:Double>
                </x:Arguments>
            </custom:SlidePuzzleView>

            <RoundRectangle StrokeThickness="10" CornerRadius="2"
                    Stroke="Black" 
                    Style="{StaticResource PuzzleDecorationStyle}" 
                    AnchorX="{OnPlatform 0.5, Android=0}" AnchorY="{OnPlatform 0.5, Android=0}"
                    Scale="1.05"
                    InputTransparent="True">
                <!-- Comment: I don't know why additional anchor settings are needed for Android -->
                <!--<RoundRectangle.Shadow>
                    <Shadow Brush="Black" Offset="10, 10" Radius="20" Opacity="0.8"/>
                </RoundRectangle.Shadow>-->
            </RoundRectangle>

            <Image x:Name="CurrentStageImage" BackgroundColor="{StaticResource AppBackgroundColor}"
                   Style="{StaticResource PuzzleDecorationStyle}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="AppStates">
                        <VisualState Name="Default">
                            <VisualState.Setters>
                                <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="False"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="OnGamePreparing">
                            <VisualState.Setters>
                                <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="True"/>
                            </VisualState.Setters>
                        </VisualState>
                        <!--<VisualState Name="OnGamePlay">
                            <VisualState.Setters>
                                <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="False"/>
                            </VisualState.Setters>
                        </VisualState>-->
                        <VisualState Name="OnGameCompleted">
                            <VisualState.Setters>
                                <Setter TargetName="CurrentStageImage" Property="IsVisible" Value="True"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Image>


        </Grid>

        <Grid HeightRequest="80">
            <ImageButton x:Name="StartButton" Source="start.png" Clicked="StartClicked"/>
        </Grid>

        <Grid HeightRequest="80">
            <ImageButton x:Name="ResetButton" Source="reset.png" Clicked="ResetClicked"/>
        </Grid>

    </VerticalStackLayout>

</ContentPage>
